angular.module("specerator.data",[]).service("socketApiService",function(t){function o(t,o){var e="";for(var r in o){var s=o[r];e+=encodeURIComponent(r)+"="+encodeURIComponent(s)+"&"}return e.length>0&&(e=e.substring(0,e.length-1),t=t+"?"+e),t}function e(t,o){return t.replace(/{{\s*?(\w*)\s*?}}/g,function(t,e,r){if("undefined"==typeof o[e])return"";var s=o[e];return delete o[e],s})}this.options={accessToken:null},this.getHeaders=function(){return{"content-type":"application/json",authorization:"Bearer "+this.options.accessToken}},this.isConnected=function(){return new t(function(t,o){return io.socket.isConnected?t(!0):void io.socket.on("connect",function(){return t(!0)})})},this.request=function(o){return o.headers=_.merge(this.getHeaders(),o.headers),this.isConnected().then(function(){return t(function(t,e){io.socket.request(o,function(o,r){return r.statusCode>=200&&r.statusCode<=299?t(o):r.statusCode>=400&&r.statusCode<=599?e(r.error):void 0})})})};var r={on:function(t){io.socket.on(this.model,t)},request:function(r,s,n){return r=r||{},n.data=s||{},n.url=e(n.url,r),r&&(n.url=o(n.url,r)),n.headers=_.merge(this.getHeaders(),n.headers),console.log(n),this.isConnected().then(function(){return t(function(t,o){io.socket.request(n,function(e,r){return r.statusCode>=200&&r.statusCode<=299?t(e):r.statusCode>=400&&r.statusCode<=599?o(r.error):void 0})})})},find:function(t,o){return options={},options.params=o,options.method="GET",options.url=this.url,options.model=this.model,this.request(t,{},options)},findOne:function(t,o){return options={},options.params=o,options.method="GET",options.url=this.url,options.model=this.model,this.request(t,{},options)},create:function(t,o,e){return options=e||{},options.method="POST",options.url=this.url,options.model=this.model,this.request(t,o,options)},update:function(t,o,e){return options=e||{},options.method="PUT",options.url=this.url,options.model=this.model,this.request(t,o,options)},remove:function(t,o){return options=o||{},options.method="DELETE",options.url=this.url,options.model=this.model,this.request(t,{},options)}},s={Document:{model:"document",url:"/projects/{{project}}/documents/{{document}}"},Integration:{model:"integration",url:"/projects/{{project}}/integrations/{{integration}}"},List:{model:"list",url:"/projects/{{project}}/lists/{{list}}"},Passport:{model:"passport",url:"/passports/{{passport}}"},Project:{model:"project",url:"/projects/{{project}}"},Service:{model:"service",url:"/services/{{service}}"},Story:{model:"story",url:"/projects/{{project}}/stories/{{story}}",sync:function(t,o){return options={},options.params=o,options.method="GET",options.url="/projects/{{project}}/stories/sync",this.request(t,{},options)}},User:{model:"user",url:"/users/{{user}}"}};for(m in s)this[m]=_.assign(s[m],this,r);return this}),angular.module("specerator").factory("Api",["$resource","API_ENDPOINT",function(t,o){return{Document:t(o+"/projects/:project/documents/:id",{project:"@project",id:"@id"}),Integration:t(o+"/projects/:project/integrations/:id",{project:"@project",id:"@id"}),Project:t(o+"/projects/:id",{id:"@id"},{report:{method:"GET",params:{id:"report"},isArray:!0}}),Story:t(o+"/projects/:project/stories/:id",{project:"@project",id:"@id"},{update:{method:"PUT",params:{param1:"@id"}}})}}]);
//# sourceMappingURL=angular-specerator.min.js.map